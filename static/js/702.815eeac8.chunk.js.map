{"version":3,"file":"static/js/702.815eeac8.chunk.js","mappings":"oRAyCA,EAtCoB,SAAHA,GAAmC,IAA7BC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MAChCC,EAAaC,OAAOC,KAAKL,GAAMM,QAAO,SAAAC,GAAG,MAAY,OAARA,CAAY,IAGzDC,EAAS,CACb,CACEC,KAAM,QACNT,KALWG,EAAWO,KAAI,SAAAC,GAAQ,OAAIX,EAAKW,EAAS,MASlDC,EAAiBR,OAAOS,OAAOZ,GAAWa,QAAO,SAACC,EAAKC,EAAUC,GAIrE,OAHKF,EAAIC,KACPD,EAAIC,GAAY,CAAEE,KAAMF,EAAUG,EAAGF,IAEhCF,CACT,GAAG,CAAC,GAEEK,EAAU,CACdC,MAAO,CACLC,OAAQ,IACRC,KAAM,SAERrB,MAAO,CACLgB,KAAMhB,GAERsB,MAAO,CACLrB,WAAYA,GAEdsB,YAAa,CACXC,SAAU,QACVC,OAAQvB,OAAOS,OAAOD,KAI1B,OAAOgB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACT,QAASA,EAASZ,OAAQA,EAAQe,KAAK,QAAQD,OAAQ,KACvE,EC1BAQ,EAAAA,GAAAA,SACEC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,IAQK,IAAMhB,EAAU,CACrBiB,UAAW,IAEXC,SAAU,CACRC,IAAK,CACHC,YAAa,IAGjBC,YAAY,EACZC,QAAS,CACPC,WAAY,CACVC,SAAS,GAEXC,OAAQ,CACND,SAAS,GAEX1C,MAAO,CACL0C,SAAS,EACT1B,KAAM,YACN4B,SAAU,MAKVC,EAAmBC,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OACnDC,EAAAA,EAAAA,MAAA,OAAKD,IAAKA,EAAKE,UAAU,UAASC,SAAA,EAChCzB,EAAAA,EAAAA,KAAA,OAAKwB,UAAU,iBAAgBC,SAC5BJ,EAAMK,YACL1B,EAAAA,EAAAA,KAAC2B,EAAW,CACVrD,MAAO,cAAgB+C,EAAMO,KAC7BxD,KAAMiD,EAAMK,UACZrD,UAAWgD,EAAMhD,eAIvB2B,EAAAA,EAAAA,KAAA,OAAKwB,UAAU,QAAOC,SACnBJ,EAAMQ,MAAMC,MAAM,EAAG,GAAGhD,KAAI,SAACiD,EAAK1C,GAAK,OACtCW,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,CAAa5D,KAAM2D,GAAb1C,EAAoB,MAE5B,sCAEF,IA4ER,MAzEA,SAAiBgC,GACf,IAAAY,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GACtCJ,GADUM,EAAA,GAAYA,EAAA,GACdd,EAAMQ,OACd9B,EAASsB,EAAMQ,MAAM/C,KAAI,SAACiD,GAAG,OAAKA,EAAIlD,IAAI,IAAEiD,MAAM,EAAG,GACnDO,GAAeC,EAAAA,EAAAA,UACflE,EAAO,CACX2B,OAAAA,EACAwC,SAAU,CACR,CACEC,MAAO,QACPpE,KAAMyD,EAAM/C,KAAI,SAACiD,GAAG,OAAKA,EAAIU,KAAK,IAAEX,MAAM,EAAG,GAC7CY,gBAAiB,aAcvB,OACE1C,EAAAA,EAAAA,KAAA,OAAKwB,UAAU,aAAYC,SACxBJ,EAAMsB,OACLpB,EAAAA,EAAAA,MAACH,EAAAA,SAAc,CAAAK,SAAA,EACbzB,EAAAA,EAAAA,KAACmB,EAAgB,CACfG,IAAKe,EACL7C,QAASA,EACTpB,KAAMA,EACNyD,MAAOA,EACPH,UAAWL,EAAMK,UACjBrD,UAAWgD,EAAMhD,UACjBuD,KAAMP,EAAMO,KAAKgB,YAAYC,MAAM,KAAK,MAE1CtB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBzB,EAAAA,EAAAA,KAAA,OACEwB,UAAU,QACVsB,QAAS,kBACPC,EAAAA,EAAAA,uBAAsBV,EAAc,CAAEW,SAAU,YAAa,EAC9DvB,SACF,eAGDzB,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CACHC,MAAO,CAELC,MAAO,eACPC,WAAY,qBACZC,QAAS,SACTC,UAAW,QACXC,aAAc,QAEhBC,GAAG,SAAQ/B,SACZ,oBAGDzB,EAAAA,EAAAA,KAACyD,EAAAA,EAAmB,CAClBC,IAAK,oCACLpF,MAAM,qDAAoDmD,UAE1DzB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,CAACC,KAAM,GAAIC,OAAK,aAQ3C,EC1IMC,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,qDAAqB,IAmIlD,MAlIA,SAAc1C,GACZ,IAAAY,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GACpC+B,GADW7B,EAAA,GAASA,EAAA,IACcD,EAAAA,EAAAA,UAAS,KAAG+B,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAAvCtC,EAASuC,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,GAA8BjC,EAAAA,EAAAA,UAC5Bb,EAAMO,KAAOP,EAAM+C,QAAUC,EAAAA,GAC9BC,GAAAlC,EAAAA,EAAAA,GAAA+B,EAAA,GAFMC,EAAOE,EAAA,GAAEC,EAAUD,EAAA,GAG1BE,GAA0BtC,EAAAA,EAAAA,UAASuC,EAAAA,GAAcC,GAAAtC,EAAAA,EAAAA,GAAAoC,EAAA,GAA1C3C,EAAK6C,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAA4B1C,EAAAA,EAAAA,WAAS,GAAM2C,GAAAzC,EAAAA,EAAAA,GAAAwC,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAgC9C,EAAAA,EAAAA,UAAS,GAAE+C,GAAA7C,EAAAA,EAAAA,GAAA4C,EAAA,GAC3CE,GADeD,EAAA,GAAaA,EAAA,IACI/C,EAAAA,EAAAA,WAAS,IAAMiD,GAAA/C,EAAAA,EAAAA,GAAA8C,EAAA,GAyBzCE,GAzBSD,EAAA,GAAaA,EAAA,GACb9D,EAAMO,MAAOP,EAAMO,KAAKyD,IAwBlB,SAACC,EAAIC,GACxBC,QAAQC,IAAI,uBAAwBH,EAAIC,GACxC,IAAIG,EACHA,EAAatB,EAAQtF,KAAI,SAAC6G,GACzB,OAAIA,EAAOL,KAAOA,GAChBM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKD,GAAM,IACTE,UAAWN,IAGRI,CACT,IACEpB,EAAWmB,GAEbrE,EAAMkD,WAAWmB,EACnB,GAqDA,OACE1F,EAAAA,EAAAA,KAAA,OAAAyB,SACIqD,GAWA9E,EAAAA,EAAAA,KAAC8F,EAAO,CACNpE,UAAWA,GAAwB,GACnCrD,UA1GU,CAChB0H,UAAW,aACXC,oBAAgB,aAChBC,SAAU,aAEVC,eAAW,YACXC,aAAc,YACdC,eAAW,YACXC,cAAU,YAEVC,YAAa,YACbC,WAAY,YAEZC,GAAI,QAEJC,eAAgB,QAEhBC,iBAAa,YACbC,SAAU,YACVC,aAAc,YACdC,IAAK,YACLC,aAAc,aAsFRlF,KAAMP,EAAMO,KACZ/C,KAAMwC,EAAMO,KAAKgB,YACjBD,KAAMmC,EACNjD,MAAOA,EAAMkF,MAAK,SAAUC,EAAGC,GAC7B,OAAOA,EAAExE,MAAQuE,EAAEvE,KACrB,OAlBFzC,EAAAA,EAAAA,KAAAkH,EAAAA,SAAA,CAAAzF,UACEzB,EAAAA,EAAAA,KAAC8D,EAAS,CACRM,QAAS/C,EAAM+C,QACf+C,SAAU/B,EACVgC,mBAAoB/F,EAAM+F,mBAC1BC,UA3DQ,WAEhB,IAAI3F,EAAY,CAAE4D,IAAI,IAAIgC,MAAOC,cAAczF,MAAM,EAAG,KACpD0F,EAAW3F,EACf4C,EAAAA,EAAAA,KAAkB,SAACgD,GAEjB,IAAIC,EAAUD,EAAUhF,MACxB2B,EAAQtF,KAAI,SAAC6G,GAEX8B,EAAUE,QAAQ7I,KAAI,SAAC8I,GAEjBjC,EAAOL,KAAOsC,GACZjC,EAAOE,YACT6B,GAAoB/B,EAAOE,UAGjC,GACF,IAEAnE,EAAU+F,EAAU5I,MAAQ6I,EAC3BF,EAAWA,EAAS1I,KAAI,SAACiD,GACxB,OAAIA,EAAIuD,IAAMmC,EAAUnC,IACtBM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK7D,GAAG,IACNU,MAAOiF,IAIJ3F,CACT,IACE4C,EAAS6C,GACXnG,EAAMsD,SAAS6C,EAIjB,IACAzC,GAAWD,GAEXZ,EAAaxC,GACbL,EAAM6C,aAAaxC,GACnBL,EAAM+F,qBACN/F,EAAMwG,oBAAoBhG,EAAOH,EACnC,EAkBUoG,iBAhBe,WACvBzG,EAAM+C,QAAQ2D,SAAQ,SAACC,GACrB5C,EAAa4C,EAAK1C,GAAI,EACxB,IAEAjE,EAAM+F,oBACR,OA2BF,C","sources":["pages/Prueba/SpiderChart.jsx","pages/Prueba/Results.jsx","pages/Prueba/Test.jsx"],"sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\n\nconst SpiderChart = ({ data, subgroups ,title}) => {\n  const categories = Object.keys(data).filter(key => key !== 'id');\n  const values = categories.map(category => data[category]);\n\n  const series = [\n    {\n      name: 'Dones',\n      data: values,\n    },\n  ];\n\n  const subgroupLabels = Object.values(subgroups).reduce((acc, subgroup, index) => {\n    if (!acc[subgroup]) {\n      acc[subgroup] = { text: subgroup, x: index };\n    }\n    return acc;\n  }, {});\n\n  const options = {\n    chart: {\n      height: 200,\n      type: 'radar',\n    },\n    title: {\n      text: title,\n    },\n    xaxis: {\n      categories: categories,\n    },\n    annotations: {\n      position: 'front',\n      labels: Object.values(subgroupLabels),\n    },\n  };\n\n  return <Chart options={options} series={series} type=\"radar\" height={300} />;\n};\n\nexport default SpiderChart;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from \"chart.js\";\nimport { Link } from \"react-router-dom\";\nimport Don from \"../Dones/Don\";\nimport { WhatsappShareButton, WhatsappIcon } from \"react-share\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\nimport {\n  exportComponentAsJPEG,\n  componentToDataURL\n} from \"react-component-export-image\";\n\nimport SpiderChart from \"./SpiderChart\";\nexport const options = {\n  indexAxis: \"y\",\n  // maintainAspectRatio: false,\n  elements: {\n    bar: {\n      borderWidth: 1\n    }\n  },\n  responsive: true,\n  plugins: {\n    datalabels: {\n      display: true\n    },\n    legend: {\n      display: false\n    },\n    title: {\n      display: true,\n      text: \"Mis dones\",\n      fontSize: 18\n    }\n  }\n};\n\nconst ComponentToPrint = React.forwardRef((props, ref) => (\n  <div ref={ref} className=\"results\">\n    <div className=\"result-graphic\">\n      {props.resultado && (\n        <SpiderChart\n          title={\"Mis dones: \" + props.user}\n          data={props.resultado}\n          subgroups={props.subgroups}\n        />\n      )}\n    </div>\n    <div className=\"dones\">\n      {props.dones.slice(0, 3).map((don, index) => (\n        <Don key={index} data={don} />\n      ))}\n    </div>\n    Fuente: joel5vega.github.io/dones\n  </div>\n));\n\nfunction Results(props) {\n  const [dataUrl, setDataUrl] = useState(\"\");\n  var dones = props.dones;\n  var labels = props.dones.map((don) => don.name).slice(0, 4);\n  const componentRef = useRef();\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Dones\",\n        data: dones.map((don) => don.score).slice(0, 4),\n        backgroundColor: \"#3952b2\"\n      }\n    ]\n  };\n  const handleShare = () => {\n    try {\n      componentToDataURL(componentRef, \"image/jpeg\").then((dataUrl) => {\n        console.log(dataUrl);\n        setDataUrl(dataUrl);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <div className=\"resultados\">\n      {props.show && (\n        <React.Fragment>\n          <ComponentToPrint\n            ref={componentRef}\n            options={options}\n            data={data}\n            dones={dones}\n            resultado={props.resultado}\n            subgroups={props.subgroups}\n            user={props.user.displayName.split(\" \")[0]}\n          />\n          <div className=\"stack\">\n            <div\n              className=\"boton\"\n              onClick={() =>\n                exportComponentAsJPEG(componentRef, { fileName: \"misdones\" })\n              }\n            >\n              Descargar\n            </div>\n            <Link\n              style={{\n                // margin: \"1rem\",\n                color: \"var(--fondo)\",\n                background: \"var(--informacion)\",\n                padding: \"0.5rem\",\n                minHeight: \"1rem \",\n                borderRadius: \"1rem\"\n              }}\n              to=\"/lista\"\n            >\n              Lista de dones\n            </Link>\n            <WhatsappShareButton\n              url={\"https://joel5vega.github.io/dones\"}\n              title=\"Mira esta app para conocer tus dones espirituales!\"\n            >\n              <WhatsappIcon size={32} round />\n            </WhatsappShareButton>\n\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\nexport default Results;\n","import React, { useState, lazy } from \"react\";\nimport PreguntasData from \"../../data/PreguntasData\";\nimport CategoriaData from \"../../data/CategoriasData\";\nimport Results from \"./Results\";\n// import Preguntas from \"./Preguntas\";\nconst Preguntas = lazy(() => import(\"./Preguntas\"));\nfunction Test(props) {\n  const [data, setData] = useState({});\n  const [resultado, setResultado] = useState([]);\n  const [answers, setAnswers] = useState(\n    props.user ? props.answers : PreguntasData\n  );\n  const [dones, setDones] = useState(CategoriaData);\n  const [result, setResult] = useState(false);\n  const [progreso, setProgreso] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const userId = props.user ? props.user.uid : null;\n  const subgroups = {\n    Liderazgo: \"Mayordomia\",\n    Administración: \"Mayordomia\",\n    Pastoreo: \"Mayordomia\",\n\n    Enseñanza: \"Comunicar\",\n    Conocimiento: \"Comunicar\",\n    Sabiduría: \"Comunicar\",\n    Profecía: \"Comunicar\",\n\n    Evangelismo: \"Comunicar\",\n    Apostolado: \"Comunicar\",\n\n    Fe: \"Poder\",\n\n    Discernimiento: \"Poder\",\n\n    Exhortación: \"Ministrar\",\n    Servicio: \"Ministrar\",\n    Misericordia: \"Ministrar\",\n    Dar: \"Ministrar\",\n    Hospitalidad: \"Ministrar\"\n  };\n  const handleChange = (id, value) => {\n    console.log(\"handlechange on test\", id, value);\n    var newAnswers = [];\n    (newAnswers = answers.map((answer) => {\n      if (answer.id === id) {\n        return {\n          ...answer,\n          respuesta: value\n        };\n      }\n      return answer;\n    })),\n      setAnswers(newAnswers);\n    // console.log(\"newAnswers\", newAnswers);\n    props.setAnswers(newAnswers);\n  };\n\n  const buscarDon = () => {\n    // buscamos entre todos los dones para cada categoria\n    let resultado = { id: new Date().toISOString().slice(0, 10) };\n    var actDones = dones;\n    CategoriaData.map((categoria) => {\n      //buscamos entre todas las respustas\n      var puntaje = categoria.score;\n      answers.map((answer) => {\n        //  las q coincidad con nuestra categoria\n        categoria.valores.map((valor) => {\n          //si coincide\n          if (answer.id === valor) {\n            if (answer.respuesta) {\n              puntaje = puntaje + answer.respuesta;\n            }\n          }\n        });\n      });\n      // console.log(categoria.name, puntaje);\n      resultado[categoria.name] = puntaje;\n      (actDones = actDones.map((don) => {\n        if (don.id == categoria.id) {\n          return {\n            ...don,\n            score: puntaje\n          };\n        }\n        // console.log(don)\n        return don;\n      })),\n        setDones(actDones);\n      props.setDones(actDones);\n      if (puntaje) {\n        // console.log(\"actualiza\", categoria.name, actDones);\n      }\n    });\n    setResult(!result);\n    // console.log(\"res\", resultado);\n    setResultado(resultado);\n    props.setResultado(resultado);\n    props.handleSaveProgress();\n    props.handleSaveResultado(dones, resultado);\n  };\n  //resetear respuestas\n  const handleResetClick = () => {\n    props.answers.forEach((item) => {\n      handleChange(item.id, 0);\n    });\n    // console.log(props.answers);\n    props.handleSaveProgress();\n  };\n  return (\n    <div>\n      {!result ? (\n        <>\n          <Preguntas\n            answers={props.answers}\n            onChange={handleChange}\n            handleSaveProgress={props.handleSaveProgress}\n            buscarDon={buscarDon}\n            handleResetClick={handleResetClick}\n          />\n        </>\n      ) : (\n        <Results\n          resultado={resultado ? resultado : []}\n          subgroups={subgroups}\n          user={props.user}\n          name={props.user.displayName}\n          show={result}\n          dones={dones.sort(function (a, b) {\n            return b.score - a.score;\n          })}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Test;\n"],"names":["_ref","data","subgroups","title","categories","Object","keys","filter","key","series","name","map","category","subgroupLabels","values","reduce","acc","subgroup","index","text","x","options","chart","height","type","xaxis","annotations","position","labels","_jsx","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","indexAxis","elements","bar","borderWidth","responsive","plugins","datalabels","display","legend","fontSize","ComponentToPrint","React","props","ref","_jsxs","className","children","resultado","SpiderChart","user","dones","slice","don","Don","_useState","useState","_useState2","_slicedToArray","componentRef","useRef","datasets","label","score","backgroundColor","show","displayName","split","onClick","exportComponentAsJPEG","fileName","Link","style","color","background","padding","minHeight","borderRadius","to","WhatsappShareButton","url","WhatsappIcon","size","round","Preguntas","lazy","_useState3","_useState4","setResultado","_useState5","answers","PreguntasData","_useState6","setAnswers","_useState7","CategoriaData","_useState8","setDones","_useState9","_useState10","result","setResult","_useState11","_useState12","_useState13","_useState14","handleChange","uid","id","value","console","log","newAnswers","answer","_objectSpread","respuesta","Results","Liderazgo","Administración","Pastoreo","Enseñanza","Conocimiento","Sabiduría","Profecía","Evangelismo","Apostolado","Fe","Discernimiento","Exhortación","Servicio","Misericordia","Dar","Hospitalidad","sort","a","b","_Fragment","onChange","handleSaveProgress","buscarDon","Date","toISOString","actDones","categoria","puntaje","valores","valor","handleSaveResultado","handleResetClick","forEach","item"],"sourceRoot":""}