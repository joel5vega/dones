{"version":3,"file":"static/js/702.8a42da18.chunk.js","mappings":"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","sources":["pages/Prueba/SpiderChart.jsx","pages/Prueba/Results.jsx","pages/Prueba/Test.jsx"],"sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\n\nconst SpiderChart = ({ data, subgroups ,title}) => {\n  const categories = Object.keys(data).filter(key => key !== 'id');\n  const values = categories.map(category => data[category]);\n\n  const series = [\n    {\n    //   name: 'Series 1',\n      data: values,\n    },\n  ];\n\n  const subgroupLabels = Object.values(subgroups).reduce((acc, subgroup, index) => {\n    if (!acc[subgroup]) {\n      acc[subgroup] = { text: subgroup, x: index };\n    }\n    return acc;\n  }, {});\n\n  const options = {\n    chart: {\n      height: 200,\n      type: 'radar',\n    },\n    title: {\n      text: title,\n    },\n    xaxis: {\n      categories: categories,\n    },\n    annotations: {\n      position: 'front',\n      labels: Object.values(subgroupLabels),\n    },\n  };\n\n  return <Chart options={options} series={series} type=\"radar\" height={300} />;\n};\n\nexport default SpiderChart;\n","import React, { useRef } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Link } from \"react-router-dom\";\nimport Don from \"../Dones/Don\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\nimport {\n  exportComponentAsJPEG,\n  exportComponentAsPNG\n} from \"react-component-export-image\";\n\nimport { Button } from \"@mui/material\";\nimport SpiderChart from \"./SpiderChart\";\nexport const options = {\n  indexAxis: \"y\",\n  // maintainAspectRatio: false,\n  elements: {\n    bar: {\n      borderWidth: 1\n    }\n  },\n  responsive: true,\n  plugins: {\n    datalabels: {\n      display: true\n    },\n    legend: {\n      display: false\n    },\n    title: {\n      display: true,\n      text: \"Mis dones\",\n      fontSize: 18\n    }\n  }\n};\n\nconst ComponentToPrint = React.forwardRef((props, ref) => (\n  <div ref={ref} className=\"results\">\n    {/* <Bar options={props.options} data={props.data} /> */}\n    <div className=\"result-graphic\">\n      {props.resultado && (\n        <SpiderChart\n          title={\"Mis dones: \" + props.user}\n          data={props.resultado}\n          subgroups={props.subgroups}\n        />\n      )}\n    </div>\n    <div className=\"dones\">\n      {props.dones.slice(0, 3).map((don, index) => (\n        <Don key={index} data={don} />\n      ))}\n    </div>\n\n    Fuente: joel5vega.github.io/dones\n  </div>\n));\n\nfunction Results(props) {\n  var dones = props.dones;\n  var labels = props.dones.map((don) => don.name).slice(0, 4);\n  const componentRef = useRef();\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Dones\",\n        data: dones.map((don) => don.score).slice(0, 4),\n        backgroundColor: \"#3952b2\"\n      }\n    ]\n  };\n  return (\n    <div className=\"resultados\">\n      {props.show && (\n        <React.Fragment>\n          <ComponentToPrint\n            ref={componentRef}\n            options={options}\n            data={data}\n            dones={dones}\n            resultado={props.resultado}\n            subgroups={props.subgroups}\n            user={props.user.displayName.split(\" \")[0]}\n          />\n          <div\n            className=\"boton\"\n            onClick={() =>\n              exportComponentAsJPEG(componentRef, { fileName: \"misdones\" })\n            }\n          >\n            Descargar resultados\n          </div>\n          <Link\n            style={{\n              margin: \"2rem\",\n              color: \"var(--fondo)\",\n              background: \"var(--activo)\",\n              padding: \"1rem\",\n              minHeight: \"1rem \",\n              borderRadius: \"1rem\"\n            }}\n            to=\"/lista\"\n            onClick={() =>\n              exportComponentAsJPEG(componentRef, { fileName: \"misdones\" })\n            }\n          >\n            Ver listado de todos los dones\n          </Link>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default Results;\n","import React, { useState, lazy } from \"react\";\nimport PreguntasData from \"../../data/PreguntasData\";\nimport CategoriaData from \"../../data/CategoriasData\";\nimport Results from \"./Results\";\n// import Preguntas from \"./Preguntas\";\nconst Preguntas = lazy(() => import(\"./Preguntas\"));\nfunction Test(props) {\n  const [data, setData] = useState({});\n  const [resultado, setResultado] = useState([]);\n  const [answers, setAnswers] = useState(\n    props.user ? props.answers : PreguntasData\n  );\n  const [dones, setDones] = useState(CategoriaData);\n  const [result, setResult] = useState(false);\n  const [progreso, setProgreso] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const userId = props.user ? props.user.uid : null;\n  const subgroups = {\n    Liderazgo: 'Mayordomia',\n    Administración: 'Mayordomia',\n    Pastoreo: 'Mayordomia',\n    \n\n    Enseñanza: 'Comunicar',\n    Conocimiento: 'Comunicar',\n    Sabiduría: 'Comunicar',\n    Profecía: 'Comunicar',\n\n    Evangelismo: 'Comunicar',\n    Apostolado: 'Comunicar',\n    \n    Fe: 'Poder',\n\n    Discernimiento: 'Poder',\n    \n    Exhortación: 'Ministrar',\n    Servicio: 'Ministrar',\n    Misericordia: 'Ministrar',\n    Dar: 'Ministrar',\n    Hospitalidad: 'Ministrar',\n    \n  };\n  const handleChange = (id, value) => {\n    // console.log(id, value);\n    var newAnswers = [];\n    (newAnswers = answers.map((answer) => {\n      if (answer.id === id) {\n        return {\n          ...answer,\n          respuesta: value\n        };\n      }\n      return answer;\n    })),\n      setAnswers(newAnswers);\n    props.setAnswers(newAnswers);\n  };\n\n  const buscarDon = () => {\n    // buscamos entre todos los dones para cada categoria\n    let resultado = { id: new Date().toISOString().slice(0, 10) };\n    var actDones = dones;\n    CategoriaData.map((categoria) => {\n      //buscamos entre todas las respustas\n      var puntaje = categoria.score;\n      answers.map((answer) => {\n        //  las q coincidad con nuestra categoria\n        categoria.valores.map((valor) => {\n          //si coincide\n          if (answer.id === valor) {\n            if (answer.respuesta) {\n              puntaje = puntaje + answer.respuesta;\n            }\n          }\n        });\n      });\n      console.log(categoria.name, puntaje);\n      resultado[categoria.name] = puntaje;\n      (actDones = actDones.map((don) => {\n        if (don.id == categoria.id) {\n          return {\n            ...don,\n            score: puntaje\n          };\n        }\n        // console.log(don)\n        return don;\n      })),\n        setDones(actDones);\n      props.setDones(actDones);\n      if (puntaje) {\n        console.log(\"actualiza\", categoria.name, actDones);\n      }\n    });\n    setResult(!result);\n    console.log(\"res\", resultado);\n    setResultado(resultado);\n    props.setResultado(resultado);\n    props.handleSaveProgress();\n    props.handleSaveResultado(dones, resultado);\n  };\n  //resetear respuestas\n  const handleResetClick = () => {\n    props.answers.forEach((item) => {\n      handleChange(item.id, 0);\n    });\n    console.log(props.answers);\n    props.handleSaveProgress();\n  };\n  return (\n    <div>\n      {!result ? (\n        <>\n          <Preguntas\n            answers={props.answers}\n            onChange={handleChange}\n            handleSaveProgress={props.handleSaveProgress}\n            buscarDon={buscarDon}\n            handleResetClick={handleResetClick}\n          />\n        </>\n      ) : (\n        <Results\n          resultado={resultado?resultado:[]}\n          subgroups={subgroups}\n          user={props.user}\n          name={props.user.displayName}\n          show={result}\n          dones={dones.sort(function (a, b) {\n            return b.score - a.score;\n          })}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Test;\n"],"names":["_ref","data","subgroups","title","categories","Object","keys","filter","key","series","map","category","subgroupLabels","values","reduce","acc","subgroup","index","text","x","options","chart","height","type","xaxis","annotations","position","labels","_jsx","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","indexAxis","elements","bar","borderWidth","responsive","plugins","datalabels","display","legend","fontSize","ComponentToPrint","React","props","ref","_jsxs","className","children","resultado","SpiderChart","user","dones","slice","don","Don","name","componentRef","useRef","datasets","label","score","backgroundColor","show","displayName","split","onClick","exportComponentAsJPEG","fileName","Link","style","margin","color","background","padding","minHeight","borderRadius","to","Preguntas","lazy","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setResultado","_useState5","answers","PreguntasData","_useState6","setAnswers","_useState7","CategoriaData","_useState8","setDones","_useState9","_useState10","result","setResult","_useState11","_useState12","_useState13","_useState14","handleChange","uid","id","value","newAnswers","answer","_objectSpread","respuesta","Results","Liderazgo","Administración","Pastoreo","Enseñanza","Conocimiento","Sabiduría","Profecía","Evangelismo","Apostolado","Fe","Discernimiento","Exhortación","Servicio","Misericordia","Dar","Hospitalidad","sort","a","b","_Fragment","onChange","handleSaveProgress","buscarDon","Date","toISOString","actDones","categoria","puntaje","valores","valor","console","log","handleSaveResultado","handleResetClick","forEach","item"],"sourceRoot":""}