{"version":3,"file":"static/js/701.04dc7d3a.chunk.js","mappings":"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","sources":["pages/Prueba/Results.jsx","pages/Prueba/Test.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Link } from \"react-router-dom\";\nimport Don from \"../Dones/Don\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\nimport {\n  exportComponentAsJPEG,\n  exportComponentAsPNG\n} from \"react-component-export-image\";\n\nimport { Button } from \"@mui/material\";\nexport const options = {\n  indexAxis: \"y\",\n  // maintainAspectRatio: false,\n  elements: {\n    bar: {\n      borderWidth: 1\n    }\n  },\n  responsive: true,\n  plugins: {\n    datalabels: {\n      display: true\n    },\n    legend: {\n      display: false\n    },\n    title: {\n      display: true,\n      text: \"Mis dones\",\n      fontSize: 18\n    }\n  }\n};\n\nconst ComponentToPrint = React.forwardRef((props, ref) => (\n  <div ref={ref} className=\"results\">\n    <Bar options={props.options} data={props.data} />\n    <div className=\"dones\">\n      {props.dones.slice(0, 4).map((don, index) => (\n        <Don key={index} data={don} />\n      ))}\n    </div>\n    Fuente: joel5vega.github.io/dones\n  </div>\n));\n\nfunction Results(props) {\n  var dones = props.dones;\n  var labels = props.dones.map((don) => don.name).slice(0, 4);\n  const componentRef = useRef();\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Dones\",\n        data: dones.map((don) => don.score).slice(0, 4),\n        backgroundColor: \"#3952b2\"\n      }\n    ]\n  };\n  return (\n    <div className=\"resultados\">\n      {props.show && (\n        <React.Fragment>\n          <ComponentToPrint\n            ref={componentRef}\n            options={options}\n            data={data}\n            dones={dones}\n          />\n          <div\n            className=\"boton\"\n            onClick={() =>\n              exportComponentAsJPEG(componentRef, { fileName: \"misdones\" })\n            }\n          >\n            Descargar resultados\n          </div>\n          <Link\n            style={{\n              margin: \"2rem\",\n              color: \"var(--fondo)\",\n              background: \"var(--activo)\",\n              padding: \"1rem\",\n              minHeight: \"1rem \",\n              borderRadius: \"1rem\"\n            }}\n            to=\"/lista\"\n            onClick={() =>\n              exportComponentAsJPEG(componentRef, { fileName: \"misdones\" })\n            }\n          >\n            Ver listado de todos los dones\n          </Link>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default Results;\n","import React, { useState, lazy, useEffect, useContext } from \"react\";\nimport PreguntasData from \"../../data/PreguntasData\";\nimport CategoriaData from \"../../data/CategoriasData\";\nimport Results from \"./Results\";\n// import Preguntas from \"./Preguntas\";\nconst Preguntas = lazy(() => import(\"./Preguntas\"));\nfunction Test(props) {\n  const [data, setData] = useState({});\n  const [answers, setAnswers] = useState(\n    props.user ? props.answers : PreguntasData\n  );\n  const [dones, setDones] = useState(CategoriaData);\n  const [result, setResult] = useState(false);\n  const [progreso, setProgreso] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const userId = props.user ? props.user.uid : null;\n\n  const handleChange = (id, value) => {\n    console.log(id, value);\n    var newAnswers = [];\n    (newAnswers = answers.map((answer) => {\n      if (answer.id === id) {\n        return {\n          ...answer,\n          respuesta: value\n        };\n      }\n      return answer;\n    })),\n      setAnswers(newAnswers);\n    props.setAnswers(newAnswers);\n  };\n\n  const buscarDon = () => {\n    // buscamos entre todos los dones para cada categoria\n    var actDones = dones;\n    CategoriaData.map((categoria) => {\n      //buscamos entre todas las respustas\n      var puntaje = categoria.score;\n      answers.map((answer) => {\n        //  las q coincidad con nuestra categoria\n        categoria.valores.map((valor) => {\n          //si coincide\n          if (answer.id === valor) {\n            if (answer.respuesta) {\n              puntaje = puntaje + answer.respuesta;\n            }\n          }\n        });\n      });\n      console.log(categoria.name, puntaje);\n      (actDones = actDones.map((don) => {\n        if (don.id == categoria.id) {\n          return {\n            ...don,\n            score: puntaje\n          };\n        }\n        // console.log(don)\n        return don;\n      })),\n        setDones(actDones);\n      if (puntaje) {\n        // console.log(\"actualiza\", categoria.name, actDones);\n      }\n    });\n    setResult(!result);\n    props.handleSaveProgress();\n  };\n  const handleResetClick = () => {\n    props.answers.forEach((item) => {\n      handleChange(item.id, 0);\n    });\n    console.log(props.answers)\n    props.handleSaveProgress();\n  };\n  return (\n    <div>\n      {!result ? (\n        <>\n          <Preguntas\n            answers={props.answers}\n            onChange={handleChange}\n            handleSaveProgress={props.handleSaveProgress}\n            buscarDon={buscarDon}\n            handleResetClick={handleResetClick}\n          />\n          {/* \n          <div className=\"boton\" onClick={buscarDon}>\n            Buscar mi Don\n          </div> */}\n        </>\n      ) : (\n        <Results\n          show={result}\n          dones={dones.sort(function (a, b) {\n            return b.score - a.score;\n          })}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Test;\n"],"names":["ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","indexAxis","elements","bar","borderWidth","responsive","plugins","datalabels","display","legend","title","text","fontSize","ComponentToPrint","React","props","ref","_jsxs","className","children","_jsx","Bar","data","dones","slice","map","don","index","Don","labels","name","componentRef","useRef","datasets","label","score","backgroundColor","show","onClick","exportComponentAsJPEG","fileName","Link","style","margin","color","background","padding","minHeight","borderRadius","to","Preguntas","lazy","_useState","useState","_useState2","_slicedToArray","_useState3","user","answers","PreguntasData","_useState4","setAnswers","_useState5","CategoriaData","_useState6","setDones","_useState7","_useState8","result","setResult","_useState9","_useState10","_useState11","_useState12","handleChange","uid","id","value","console","log","newAnswers","answer","_objectSpread","respuesta","Results","sort","a","b","_Fragment","onChange","handleSaveProgress","buscarDon","actDones","categoria","puntaje","valores","valor","handleResetClick","forEach","item"],"sourceRoot":""}