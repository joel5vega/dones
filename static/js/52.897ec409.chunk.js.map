{"version":3,"file":"static/js/52.897ec409.chunk.js","mappings":"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","sources":["components/SliderSimple.jsx","pages/Prueba/Preguntas.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFrown,\n  faGrimace,\n  faMeh,\n  faSmile,\n  faGrin,\n  faFaceSmileBeam,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Slider.css\";\nconst Slider = ({ id, value, onChange, pregunta }) => {\n  const options = [\n    { icon: faGrimace, label: \"No\", value: 0 },\n    { icon: faSmile, label: \"Maybe\", value: 1 },\n    { icon: faGrin, label: \"Surely\", value: 2 },\n    { icon: faFaceSmileBeam, label: \"Definitely\", value: 3 },\n    { icon: faFaceSmileBeam, label: \"Definitely\", value: 4 },\n  ];\n\n  return (\n    <div className=\"slider-container\">\n      <label htmlFor={id}>{pregunta}</label>\n      <div className=\"slider-value\">\n        <FontAwesomeIcon icon={options[value].icon} color=\"#FBAF00\" />\n      </div>\n      <div className=\"slider-input-container\">\n        <label>Poco</label>\n        <input\n          id={id}\n          type=\"range\"\n          min=\"0\"\n          max=\"3\"\n          value={value}\n          onChange={(event) => onChange(id, Number(event.target.value))}\n        />\n        <label>Mucho</label>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useState } from \"react\";\nimport Slider from \"../../components/SliderSimple\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faGrimace,\n  faMeh,\n  faSmile,\n  faGrin,\n  faFaceSmileBeam,\n} from \"@fortawesome/free-solid-svg-icons\";\nfunction Preguntas(props) {\n  const [currentPage, setCurrentPage] = useState(0);\n  const itemsPerPage = 10;\n\n  const handlePageClick = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    props.handleSaveProgress();\n  };\n\n  const totalPages = Math.ceil(\n    props.answers ? props.answers.length / itemsPerPage : 1\n  );\n\n  return (\n    <section>\n      {/* {currentPage} */}\n      {currentPage == 0 && (\n        <div className=\"instrucciones\">\n          <p className=\"instruccion\">\n            Responde con sinceridad, si estas de acuerdo con cada declaración.{\" \"}\n          </p>\n          <p className=\"instruccion\">\n            <FontAwesomeIcon icon={faGrimace} />: Poco, muy raras veces.\n          </p>\n          <p className=\"instruccion\">\n            <FontAwesomeIcon icon={faSmile} />: A veces, me falta mejorar\n          </p>\n\n          <p className=\"instruccion\">\n            <FontAwesomeIcon icon={faGrin} />: Generalmente, me siento cómodo\n            con esto.\n          </p>\n\n          <p className=\"instruccion\">\n            <FontAwesomeIcon icon={faFaceSmileBeam} />: Siempre, es algo que me\n            encanta.\n          </p>\n        </div>\n      )}\n      {props.answers !== undefined ? (\n        <>\n          <div className=\"preguntas\">\n            {props.answers\n              .slice(\n                currentPage * itemsPerPage,\n                (currentPage + 1) * itemsPerPage\n              )\n              .map((item) => (\n                <Slider\n                  key={item.id}\n                  pregunta={item.pregunta}\n                  id={item.id}\n                  value={item.respuesta ? item.respuesta : 0}\n                  onChange={props.onChange}\n                />\n              ))}\n          </div>\n          <div className=\"action-bar\">\n            <div className=\"pagination\">\n              {[...Array(totalPages).keys()].map((pageNumber) => (\n                <button\n                  key={pageNumber}\n                  onClick={() => handlePageClick(pageNumber)}\n                  className={pageNumber === currentPage ? \"active\" : \"\"}\n                >\n                  {pageNumber + 1}\n                </button>\n              ))}\n              {currentPage < totalPages - 1 && (\n                <button\n                  onClick={() => handlePageClick(currentPage + 1)}\n                  className=\"next\"\n                ></button>\n              )}\n            </div>\n            {currentPage === totalPages - 1 && (\n              <>\n                <button onClick={props.buscarDon} className=\"boton\">\n                  <div className=\"boton-con-logo\">\n                    <FontAwesomeIcon  className='boton-icon' icon={faSearch} />\n                Buscar mi don</div>\n                </button>\n              </>\n            )}\n          </div>\n        </>\n      ) : (\n        <section>no puedes ver preguntas</section>\n      )}\n    </section>\n  );\n}\nexport default Preguntas;\n"],"names":["_ref","id","value","onChange","pregunta","options","icon","faGrimace","label","faSmile","faGrin","faFaceSmileBeam","_jsxs","className","children","_jsx","htmlFor","FontAwesomeIcon","color","type","min","max","event","Number","target","props","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","handlePageClick","pageNumber","handleSaveProgress","totalPages","Math","ceil","answers","length","undefined","_Fragment","slice","map","item","Slider","respuesta","_toConsumableArray","Array","keys","onClick","buscarDon","faSearch"],"sourceRoot":""}